<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attach="clr-namespace:WYW.UI.Controls.Attach">
  
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Path=(attach:ComboBoxElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="{Binding Path=(attach:ComboBoxElement.SuffixWidth),RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding Path=(attach:ComboBoxElement.Title),RelativeSource={RelativeSource TemplatedParent}}"/>
            <Grid Grid.Column="1" Name="MainGrid" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="25"/>
                </Grid.ColumnDefinitions>
                <Popup Name="PART_Popup"
                   AllowsTransparency="true"
                   Grid.ColumnSpan="2"
                   Placement="Bottom"
                   Margin="1"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Grid Margin="4" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5"
                            Margin="-1"/>
                        <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75"
                            Margin="-2"/>

                        <Border x:Name="DropDownBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Margin="0,-1,0,0">
                            <!-- popup border thickness not dependent on BorderThickness property-->
                            <ScrollViewer Name="DropDownScrollViewer">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <Rectangle
                                        Name="OpaqueRect"
                                        Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                                        Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                                        Fill="{Binding ElementName=DropDownBorder,Path=Background}"/>
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
                <ToggleButton Grid.ColumnSpan="2" Grid.Column="0" Style="{StaticResource ComboBoxToggleButton}"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          attach:ButtonElement.CornerRadius="{Binding Path=(attach:ComboBoxElement.CornerRadius),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                <TextBlock Grid.Column="0" x:Name="InputHint" 
                           Text="{Binding Path=(attach:ComboBoxElement.InputHint),RelativeSource={RelativeSource TemplatedParent}}"
                           VerticalAlignment="Center" 
                           Padding="{TemplateBinding Padding}"
                           Opacity="0.6" Visibility="Collapsed"/>
                <TextBox Grid.Column="0" x:Name="PART_EditableTextBox"
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                     Margin="{TemplateBinding Padding}"
                     Padding="0"
                     Style="{StaticResource ComboBoxEditableTextBox}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <Popup x:Name="PopupHint" PlacementTarget="{Binding ElementName=PART_EditableTextBox}" AllowsTransparency="True" Focusable="False" Placement="Top"  PopupAnimation="Slide">
                    <Grid Visibility="{Binding Path=(attach:ComboBoxElement.PopupHint),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource ConstToVisibilityConverter}}">
                        <StackPanel>
                            <Border CornerRadius="3"
                                                BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}"
                                                Background="{StaticResource Item.BackgroundSelected}">
                                <TextBlock Text="{Binding Path=(attach:ComboBoxElement.PopupHint),RelativeSource={RelativeSource TemplatedParent}}" Margin="8,6" 
                                                       Foreground="{StaticResource Item.ForegroundSelected}" 
                                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Polygon Points="0,0 10,0 5,5 0,0" 
                                                 Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0"
                                                 Fill="{StaticResource Item.BackgroundSelected}" Margin="10,0,0,0"/>
                            <Grid Height="5"/>
                        </StackPanel>
                    </Grid>
                </Popup>
            </Grid>
            <TextBlock Grid.Column="2" Padding="5,0,0,0" Text="{Binding Path=(attach:ComboBoxElement.Suffix),RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
     
        <ControlTemplate.Triggers>
            <Trigger Property="attach:ComboBoxElement.Title" Value="{x:Null}">
                <Setter Property="attach:ComboBoxElement.TitleWidth" Value="0"/>
            </Trigger>
            <Trigger Property="attach:ComboBoxElement.Suffix" Value="{x:Null}">
                <Setter Property="attach:ComboBoxElement.SuffixWidth" Value="0"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHover}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushFocused}"/>
            </Trigger>
            <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushFocused}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}"/>
                <Setter TargetName="OpaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}"/>
            </Trigger>
            <Trigger Property="Text" Value="">
                <Setter TargetName="InputHint" Property="Visibility" Value="Visible"/>
            </Trigger>
            <!--使用IsKeyboardFocused未能实现效果-->
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="PopupHint" Property="IsOpen" Value="true"/>
                <Setter TargetName="InputHint" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource ForegroundDisabled}"/>
                <Setter TargetName="InputHint" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxBaseStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
        <Setter Property="Background" Value="{StaticResource Control.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="3,2"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="MinHeight" Value="{StaticResource TextElement.Height}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource VerticalMargin}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding Path=(attach:ComboBoxElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="{Binding Path=(attach:ComboBoxElement.SuffixWidth),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Path=(attach:ComboBoxElement.Title),RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid Grid.Column="1" Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="25"/>
                            </Grid.ColumnDefinitions>
                            <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="1"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Grid Margin="4" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1"
                                        CornerRadius="2.5" Margin="-1"/>
                                    <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1"
                                        CornerRadius="2.75" Margin="-2"/>

                                    <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        Margin="0,-1,0,0">
                                        <!-- popup border thickness not dependent on BorderThickness property-->
                                        <ScrollViewer Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas Height="0" Width="0" HorizontalAlignment="Left"
                                                    VerticalAlignment="Top">
                                                    <Rectangle
                                                    Name="OpaqueRect"
                                                    Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                                                    Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                                                    Fill="{Binding ElementName=DropDownBorder,Path=Background}"/>
                                                </Canvas>
                                                <ItemsPresenter Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                            <Border Grid.Column="0"  Grid.ColumnSpan="2"  BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton   x:Name="ToggleButton"
                                      Style="{StaticResource ComboBoxToggleButton}"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="0"
                                      attach:ButtonElement.CornerRadius="{Binding Path=(attach:ComboBoxElement.CornerRadius),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>

                            </Border>
                            
                            <ContentPresenter Grid.Column="0"  IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </Grid>
                        <TextBlock Grid.Column="2" Margin="5,0,0,0" Text="{Binding Path=(attach:ComboBoxElement.Suffix),RelativeSource={RelativeSource TemplatedParent}}"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="attach:ComboBoxElement.Title" Value="{x:Null}">
                            <Setter Property="attach:ComboBoxElement.TitleWidth" Value="0"/>
                        </Trigger>
                        <Trigger Property="attach:ComboBoxElement.Suffix" Value="{x:Null}">
                            <Setter Property="attach:ComboBoxElement.SuffixWidth" Value="0"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHover}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushFocused}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll"
                                 Value="false">
                            <Setter TargetName="OpaqueRect"
                                    Property="Canvas.Top"
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}"/>
                            <Setter TargetName="OpaqueRect"
                                    Property="Canvas.Left"
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Visibility" TargetName="ToggleButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxBaseStyle}"/>

    <Style x:Key="ComboBoxNoArrowStyle"  TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxBaseStyle}">
        <Setter Property="HorizontalContentAlignment"  Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding Path=(attach:ComboBoxElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="{Binding Path=(attach:ComboBoxElement.SuffixWidth),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Path=(attach:ComboBoxElement.Title),RelativeSource={RelativeSource TemplatedParent}}"/>
                        
                        <Grid Grid.Column="1" Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Popup Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               Placement="Bottom"
                               Margin="1"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Grid Margin="4" MinWidth="{Binding ElementName=MainGrid,Path=ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1"
                                        CornerRadius="2.5" Margin="-1"/>
                                    <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1"
                                        CornerRadius="2.75" Margin="-2"/>

                                    <Border x:Name="DropDownBorder"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        Margin="0,-1,0,0">
                                        <!-- popup border thickness not dependent on BorderThickness property-->
                                        <ScrollViewer Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas Height="0" Width="0" HorizontalAlignment="Left"
                                                    VerticalAlignment="Top">
                                                    <Rectangle
                                                    Name="OpaqueRect"
                                                    Height="{Binding ElementName=DropDownBorder,Path=ActualHeight}"
                                                    Width="{Binding ElementName=DropDownBorder,Path=ActualWidth}"
                                                    Fill="{Binding ElementName=DropDownBorder,Path=Background}"/>
                                                </Canvas>
                                                <ItemsPresenter Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                            <ToggleButton Grid.ColumnSpan="2" Grid.Column="0"   x:Name="ToggleButton"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      attach:ButtonElement.CornerRadius="{Binding Path=(attach:ComboBoxElement.CornerRadius),RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>

                            <ContentPresenter Grid.Column="0"  IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </Grid>
                        <TextBlock Grid.Column="2" Margin="5,0,0,0" Text="{Binding Path=(attach:ComboBoxElement.Suffix),RelativeSource={RelativeSource TemplatedParent}}"  />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="attach:ComboBoxElement.Title" Value="{x:Null}">
                            <Setter Property="attach:ComboBoxElement.TitleWidth" Value="0"/>
                        </Trigger>
                        <Trigger Property="attach:ComboBoxElement.Suffix" Value="{x:Null}">
                            <Setter Property="attach:ComboBoxElement.SuffixWidth" Value="0"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="Height" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHover}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushFocused}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll"
                                 Value="false">
                            <Setter TargetName="OpaqueRect"
                                    Property="Canvas.Top"
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=VerticalOffset}"/>
                            <Setter TargetName="OpaqueRect"
                                    Property="Canvas.Left"
                                    Value="{Binding ElementName=DropDownScrollViewer, Path=HorizontalOffset}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Visibility" TargetName="ToggleButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ForegroundDisabled}"/>
                            <Setter Property="Background" Value="{StaticResource Control.BackgroundDisabled}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>